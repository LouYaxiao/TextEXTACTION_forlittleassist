from PyPDF2 import PdfReader
import os

def extract_text_from_pdf(file_path):
    pdf = PdfReader(file_path)
    text = ""
    for page in pdf.pages:
        text += page.extract_text()
    return text

dir_path = "D:/Python"  # the path to your folder with PDFs
papers_text = []

for file_name in os.listdir(dir_path):
    if file_name.endswith(".pdf"):
        file_path = os.path.join(dir_path, file_name)
        text = extract_text_from_pdf(file_path)
        papers_text.append(text)

# Now `papers_text` is a list with the text from each paper.

from sentence_transformers import SentenceTransformer

model = SentenceTransformer('all-MiniLM-L6-v2')  # Using a smaller but performant model for embedding

papers_embeddings = model.encode(papers_text)

# Now `papers_embeddings` is a list of embeddings for each paper.

from transformers import pipeline

# Initialize the named entity recognition pipeline
ner_pipeline = pipeline("ner", model="dslim/bert-base-NER")

papers_ner_results = []
for text in papers_text:
    ner_results = ner_pipeline(text[:100000])  # Limiting to first 100000 characters. You might need to adjust this value based on the length of your text.
    papers_ner_results.append(ner_results)

from transformers import AutoTokenizer, AutoModelForTokenClassification
from transformers import pipeline

#This script tokenizes the input text, passes it through the NER model, and prints out the entities recognized in the text.
# The entities are labeled according to a standard set of entity types, such as 'B-ORG' (Beginning of an Organization), 'I-ORG' (Inside of an Organization),
# 'B-PER' (Beginning of a Person's name), 'I-PER' (Inside of a Person's name), etc.
tokenizer = AutoTokenizer.from_pretrained("dslim/bert-base-NER")
model = AutoModelForTokenClassification.from_pretrained("dslim/bert-base-NER")

nlp = pipeline("ner", model=model, tokenizer=tokenizer)

# Suppose 'text' contains the extracted text from your documents
text = """Apple Inc. is planning to open its first retail store in San Francisco by end of 2023. 
CEO Tim Cook made this announcement."""

ner_results = nlp(text)

for result in ner_results:
    print(result)
# Now `papers_ner_results` is a list of NER results for each paper.
print(papers_ner_results)
